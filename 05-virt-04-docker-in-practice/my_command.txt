Задача 0
docker compose version
Docker Compose version v2.32.4

Задача 1
Шаг 1: Клонирование репозитория
git clone https://github.com/netology-code/shvirtd-example-python.git

Шаг 2: Установка зависимостей
cd shvirtd-example-python
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt

Шаг 3: Настройка базы данных
sudo apt update
sudo apt install mysql-server
sudo systemctl status mysql
sudo mysql_secure_installation
sudo mysql
SELECT user,authentication_string,plugin,host FROM mysql.user;
ALTER USER 'root'@'localhost' IDENTIFIED WITH caching_sha2_password BY 'password';
FLUSH PRIVILEGES;
SELECT user,authentication_string,plugin,host FROM mysql.user;
exit;
mysql -u root -p

CREATE USER 'user'@'localhost' IDENTIFIED BY 'password';
GRANT ALL PRIVILEGES ON *.* TO 'user'@'localhost';
sudo systemctl status mysql
sudo vi /etc/mysql/my.cnf
sudo systemctl restart mysql
CREATE USER 'app'@'localhost' IDENTIFIED BY 'very_strong';
SELECT user,authentication_string,plugin,host FROM mysql.user;
SHOW VARIABLES LIKE 'validate_password%';
mysql -u app -p
CREATE DATABASE example;

После запуска базы данных установливаем переменные окружения для подключения:
export DB_HOST=127.0.0.1
export DB_USER=app
export DB_PASSWORD=very_strong
export DB_NAME=example

ENV DB_HOST=mysql-db
ENV DB_USER=app
ENV DB_PASSWORD=very_strong
ENV DB_NAME=example

Шаг 4: Запуск приложения
python main.py

Запускем
http://localhost:5000/
и видим 
 * Tip: There are .env files present. Install python-dotenv to use them.
 * Serving Flask app 'main'
 * Debug mode: on
WARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.8.100:5000
Press CTRL+C to quit
 * Restarting with stat
 * Tip: There are .env files present. Install python-dotenv to use them.
 * Debugger is active!
 * Debugger PIN: 138-000-326
127.0.0.1 - - [18/Feb/2025 18:54:27] "GET / HTTP/1.1" 200 -
127.0.0.1 - - [18/Feb/2025 18:54:27] "GET /favicon.ico HTTP/1.1" 404 -
127.0.0.1 - - [18/Feb/2025 18:54:31] "GET / HTTP/1.1" 200 -

проверка наличия записей в таблице
mysql -u root -p
use example;
SHOW FULL TABLES;
select * from requests;

+----+---------------------+------------+
| id | request_date        | request_ip |
+----+---------------------+------------+
|  1 | 2025-02-18 18:54:27 | NULL       |
|  2 | 2025-02-18 18:54:31 | NULL       |
|  3 | 2025-02-18 19:04:57 | NULL       |
+----+---------------------+------------+
3 rows in set (0.00 sec)



Задача 2



Задача 3
sudo systemctl stop mysql
sudo netstat -tulnp | grep 3306


